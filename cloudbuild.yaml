steps:
# Step 1: Build the Docker image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/gke-app:$COMMIT_SHA', '.']
  id: Build

# Step 2: Push the Docker image to Google Container Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/gke-app:$COMMIT_SHA']
  id: Push

# Step 3: Set up kubectl
- name: 'gcr.io/cloud-builders/kubectl'
  args: ['version']
  id: Setup
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=my-cluster'
  - 'KUBECONFIG=/workspace/.kube/config'

# Step 4: Authenticate kubectl with the cluster
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    set -x
    gcloud container clusters get-credentials my-cluster --zone us-central1-a --quiet
  id: Authenticate

# Step 5: Apply the Kubernetes deployment
- name: 'gcr.io/cloud-builders/kubectl'
  args: ['apply', '-f', 'deployment.yaml']
  id: Deploy
  env:
  - 'KUBECONFIG=/workspace/.kube/config'

# Optional: Set the image in the deployment
- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'set'
  - 'image'
  - 'deployment/gke-app'
  - 'my-app=gcr.io/$PROJECT_ID/gke-app:$COMMIT_SHA'
  id: Update-Image
  env:
  - 'KUBECONFIG=/workspace/.kube/config'

images:
- 'gcr.io/$PROJECT_ID/gke-app:$COMMIT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY

timeout: '900s'
